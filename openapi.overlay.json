{
	"components": {
		"schemas": {
			"OwnerInput": {
				"anyOf": [
					{
						"type": "object",
						"properties": {
							"public_key": {
								"type": "string"
							}
						},
						"required": ["public_key"],
						"description": "The P-256 public key of the owner of the resource. If you provide this, do not specify an owner_id as it will be generated automatically.",
						"title": "Public key owner"
					},
					{
						"type": "object",
						"properties": {
							"user_id": {
								"type": "string"
							}
						},
						"required": ["user_id"],
						"description": "The user ID of the owner of the resource. The user must already exist, and this value must start with \"did:privy:\". If you provide this, do not specify an owner_id as it will be generated automatically.",
						"title": "User owner"
					}
				]
			},
			"LinkedAccountSolanaEmbeddedWallet": {
				"//comment": "We removed public key from this list since it is not being returned in some cases",
				"required": [
					"id",
					"type",
					"address",
					"imported",
					"delegated",
					"wallet_index",
					"chain_id",
					"chain_type",
					"wallet_client",
					"wallet_client_type",
					"connector_type",
					"recovery_method",
					"verified_at",
					"first_verified_at",
					"latest_verified_at"
				]
			}
		}
	},
	"paths": {
		"/v1/users": {
			"post": {
				"operationId": "createUser"
			},
			"get": {
				"operationId": "getUsers"
			}
		},
		"/v1/users/{user_id}": {
			"get": {
				"operationId": "getUser"
			},
			"delete": {
				"operationId": "deleteUser"
			}
		},
		"/v1/users/search": {
			"post": {
				"operationId": "searchUsers"
			}
		},
		"/v1/users/{user_id}/wallets": {
			"post": {
				"operationId": "createUserWallet",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"wallets": {
										"items": {
											"properties": {
												"chain_type": {
													"anyOf": null,
													"type": "string",
													"enum": [
														"cosmos",
														"stellar",
														"sui",
														"tron",
														"bitcoin-segwit",
														"near",
														"ton",
														"starknet",
														"spark",
														"solana",
														"ethereum"
													]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/users/{user_id}/custom_metadata": {
			"post": {
				"operationId": "updateUserCustomMetadata"
			}
		},
		"/v1/wallets": {
			"post": {
				"operationId": "createWallet"
			},
			"get": {
				"operationId": "getWallets",
				"parameters": [
					{
						"schema": {
							"type": "string",
							"minLength": 1
						},
						"required": false,
						"name": "cursor",
						"in": "query"
					},
					{
						"schema": {
							"type": "number",
							"nullable": true,
							"maximum": 100
						},
						"required": false,
						"name": "limit",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"cosmos",
								"stellar",
								"sui",
								"tron",
								"bitcoin-segwit",
								"near",
								"ton",
								"starknet",
								"spark",
								"solana",
								"ethereum"
							]
						},
						"required": false,
						"name": "chain_type",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "user_id",
						"in": "query"
					}
				]
			}
		},
		"/v1/wallets/{wallet_id}/rpc": {
			"post": {
				"operationId": "walletRpc"
			}
		},
		"/v1/wallets/{wallet_id}": {
			"get": {
				"operationId": "getWallet"
			},
			"patch": {
				"operationId": "updateWallet"
			}
		},
		"/v1/wallets/{wallet_id}/raw_sign": {
			"post": {
				"operationId": "rawSign"
			}
		},
		"/v1/wallets/{wallet_id}/balance": {
			"get": {
				"operationId": "getWalletBalance"
			}
		},
		"/v1/wallets/{wallet_id}/transactions": {
			"get": {
				"operationId": "walletTransactions"
			}
		},
		"/v1/wallets/authenticate": {
			"post": {
				"operationId": "authenticate"
			}
		},
		"/v1/wallets/import/init": {
			"post": {
				"operationId": "walletImportInit"
			}
		},
		"/v1/wallets/import/submit": {
			"post": {
				"operationId": "walletImportSubmit"
			}
		},
		"/v1/wallets/{wallet_id}/export": {
			"post": {
				"operationId": "walletExport"
			}
		},
		"/v1/transactions/{transaction_id}": {
			"get": {
				"operationId": "getTransaction"
			}
		},
		"/v1/policies": {
			"post": {
				"operationId": "createPolicy"
			}
		},
		"/v1/policies/{policy_id}": {
			"get": {
				"operationId": "getPolicy"
			},
			"patch": {
				"operationId": "updatePolicy"
			},
			"delete": {
				"operationId": "deletePolicy"
			}
		},
		"/v1/policies/{policy_id}/rules": {
			"post": {
				"operationId": "createPolicyRule"
			}
		},
		"/v1/policies/{policy_id}/rules/{rule_id}": {
			"get": {
				"operationId": "getPolicyRule"
			},
			"patch": {
				"operationId": "updatePolicyRule"
			},
			"delete": {
				"operationId": "deletePolicyRule"
			}
		},
		"/v1/key_quorums/{key_quorum_id}": {
			"get": {
				"operationId": "getKeyQuorum"
			},
			"patch": {
				"operationId": "updateKeyQuorum"
			},
			"delete": {
				"operationId": "deleteKeyQuorum"
			}
		},
		"/v1/key_quorums": {
			"post": {
				"operationId": "createKeyQuorum"
			}
		},
		"/v1/users/{user_id}/fiat/status": {
			"post": {
				"operationId": "userFiatStatuses"
			}
		},
		"/v1/users/{user_id}/fiat/tos": {
			"post": {
				"operationId": "createUserFiatTos"
			}
		},
		"/v1/users/{user_id}/fiat/kyc": {
			"post": {
				"operationId": "initiateUserFiatKyc"
			},
			"get": {
				"operationId": "getUserFiatKycStatus"
			},
			"patch": {
				"operationId": "updateUserFiatKycStatus"
			}
		},
		"/v1/users/{user_id}/fiat/kyc_link": {
			"post": {
				"operationId": "getUserFiatKycLink"
			}
		},
		"/v1/users/{user_id}/fiat/accounts": {
			"get": {
				"operationId": "getUserFiatAccounts"
			},
			"post": {
				"operationId": "createUserFiatAccount"
			}
		},
		"/v1/users/{user_id}/fiat/offramp": {
			"post": {
				"operationId": "initiateUserFiatOfframp"
			}
		},
		"/v1/users/{user_id}/fiat/onramp": {
			"post": {
				"operationId": "initiateUserFiatOnramp"
			}
		},
		"/v1/apps/{app_id}/fiat": {
			"post": {
				"operationId": "configureAppForFiatOnOffRamping"
			}
		},
		"/v1/users/email/address": {
			"post": {
				"operationId": "lookUpUserByEmail"
			}
		},
		"/v1/users/custom_auth/id": {
			"post": {
				"operationId": "lookUpUserByCustomAuthId"
			}
		},
		"/v1/users/wallet/address": {
			"post": {
				"operationId": "lookUpUserByWalletAddress"
			}
		},
		"/v1/users/farcaster/fid": {
			"post": {
				"operationId": "lookUpUserByFarcasterId"
			}
		},
		"/v1/users/phone/number": {
			"post": {
				"operationId": "lookUpUserByPhoneNumber"
			}
		},
		"/v1/users/smart_wallet/address": {
			"post": {
				"operationId": "lookUpUserBySmartWalletAddress"
			}
		},
		"/v1/users/discord/username": {
			"post": {
				"operationId": "lookUpUserByDiscordUsername"
			}
		},
		"/v1/users/github/username": {
			"post": {
				"operationId": "lookUpUserByGithubUsername"
			}
		},
		"/v1/users/twitter/username": {
			"post": {
				"operationId": "lookUpUserByTwitterUsername"
			}
		},
		"/v1/users/twitter/subject": {
			"post": {
				"operationId": "lookUpUserByTwitterSubject"
			}
		},
		"/v1/users/telegram/telegram_user_id": {
			"post": {
				"operationId": "lookUpUserByTelegramUserId"
			}
		},
		"/v1/users/telegram/username": {
			"post": {
				"operationId": "lookUpUserByTelegramUsername"
			}
		},
		"/v1/users/{user_id}/accounts": {
			"post": {
				"operationId": "addOrUpdateUserLinkedAccount"
			}
		},
		"/v1/users/{user_id}/accounts/unlink": {
			"post": {
				"operationId": "unlinkUserLinkedAccount"
			}
		}
	}
}
